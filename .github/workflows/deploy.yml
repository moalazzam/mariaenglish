name: Deploy Strapi Admin to aws S3 and api to aws elasticbeanstalk

on:
  push:
    branches: [main]

  workflow_dispatch:

env:
  BUCKET_NAME: "admin.mariaenglish.me"
  AWS_REGION: "eu-central-1"
  APPLICATION_NAME: "api.mariaenglish.me"
  ENVIRONMENT_NAME: "Apimariaenglishme-env"
  VERSION_LABEL: "1.0.0"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Build
        env:
          NODE_ENV: production
        run: npm run build

      - name: Deploy admin to S3
        run: |
          aws s3 sync ./build s3://${{ env.BUCKET_NAME }}/ --delete

      - name: Deploy api to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.APPLICATION_NAME }}
          environment_name: ${{ env.ENVIRONMENT_NAME }}
          version_label: ${{ env.VERSION_LABEL }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
